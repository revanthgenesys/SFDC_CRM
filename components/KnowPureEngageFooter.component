<apex:component controller="knowLoginController">
 
 <footer class="footer-container grid-container fluid">
            <div class="footer-container-top grid-container fluid">
                <div class="footer-container-top-inner grid-container w1030">
                    <div class="grid-x grid-margin-x">
                        <div class="large-12 cell">
                            <h5>About Genesys</h5>
                            <p class="about">
                            Genesys&reg; powers 25 billion of the world&rsquo;s best customer experiences each year. Our success comes from connecting employee and customer conversations on any channel, every day. Over 10,000 companies in 100+ countries trust our #1 customer experience platform to drive great business outcomes and create lasting relationships. Combining the best of technology and human ingenuity, we build solutions that mirror natural communication and work the way you think. Our industry-leading solutions foster true omnichannel engagement, performing equally well across all channels, on-premise and in the cloud. Experience communication as it should be: fluid, instinctive and profoundly empowering.
                            </p>                    
                        </div>
                    </div>
                </div>
            </div>
            <div class="footer-container-bottom grid-container fluid">
                <div class="footer-container-bottom-inner grid-container w1030">
                    <div class="grid-x grid-margin-x">
                        <div class="large-7 cell">
                            
                            <ul class="menu line">
                                <li><a href="http://www.genesys.com/" target="_blank">Genesys</a></li>
                                <!--<li><a href="https://appfoundry.genesys.com/home" target="_blank">AppFoundry</a></li>-->
                            </ul>
                                                
                            <p class="copyright">
                                <a href="http://www.genesys.com/">Copyright&nbsp;&copy;&nbsp;2018&nbsp;Genesys</a>. All rights reserved.
                                <a href="http://www.genesys.com/about/legal/terms-of-use" style="">Terms of Use</a>
                                <span>&nbsp;|&nbsp;</span>
                                <a href="http://www.genesys.com/about/legal/privacy" style="">Privacy Policy</a>
                            </p>                    
                        </div>
                        <div class="large-5 cell">
                        
                            <ul class="menu social">
                                <li>
                                    <a href="https://twitter.com/Genesys" target="_blank"><svg class="g-icon Social_Twitter" data-url="Social_Twitter" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M90,17.593c-3.255,1.453-6.769,2.441-10.545,2.963c3.95-2.323,6.652-5.722,8.105-10.197 c-3.777,2.208-7.669,3.69-11.678,4.444c-3.545-3.834-7.99-5.752-13.334-5.752c-5.055,0-9.369,1.787-12.942,5.36 c-3.573,3.573-5.36,7.887-5.36,12.942c0,1.686,0.144,3.08,0.436,4.183c-7.495-0.406-14.526-2.295-21.091-5.665 C17.024,22.504,11.447,18,6.857,12.364C5.172,15.27,4.33,18.349,4.33,21.602c0,6.624,2.643,11.708,7.931,15.252 c-2.731-0.057-5.636-0.813-8.715-2.266v0.174c0,4.358,1.452,8.236,4.358,11.635c2.905,3.399,6.477,5.506,10.719,6.319 c-1.686,0.466-3.167,0.697-4.444,0.697c-0.756,0-1.889-0.116-3.399-0.349c1.221,3.661,3.384,6.682,6.493,9.064 c3.108,2.383,6.637,3.603,10.589,3.661c-6.741,5.229-14.323,7.844-22.746,7.844c-1.512,0-2.963-0.087-4.358-0.262 c8.598,5.462,17.953,8.192,28.063,8.192c6.506,0,12.608-1.031,18.302-3.094c5.694-2.062,10.574-4.822,14.642-8.28 c4.066-3.456,7.567-7.436,10.502-11.939c2.933-4.502,5.112-9.208,6.537-14.119c1.423-4.909,2.135-9.805,2.135-14.685 c0-1.046-0.03-1.83-0.087-2.353C84.509,24.478,87.56,21.312,90,17.593z"></path> </svg></a>
                                </li>
                                <li>
                                    <a href="http://www.linkedin.com/company/601919?trk=tyah" target="_blank"><svg class="g-icon Social_LinkedIN" data-url="Social_LinkedIN" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M21.705,13.976c0.038,2.855-0.948,5.241-2.963,7.157c-2.015,1.917-4.663,2.875-7.948,2.875h-0.117 c-3.208,0-5.789-0.958-7.744-2.875C0.977,19.217,0,16.831,0,13.976c0-2.894,1.006-5.289,3.021-7.187 c2.015-1.896,4.644-2.845,7.891-2.845c3.246,0,5.846,0.948,7.802,2.845C20.669,8.687,21.666,11.082,21.705,13.976z M20.474,31.927 v58.136H1.115V31.927H20.474z M90.107,56.741v33.321h-19.3V58.971c0-4.106-0.792-7.323-2.376-9.65 c-1.584-2.326-4.058-3.49-7.421-3.49c-2.464,0-4.527,0.675-6.189,2.024c-1.662,1.349-2.903,3.021-3.725,5.016 c-0.431,1.173-0.646,2.757-0.646,4.751v32.441h-19.3c0.077-15.604,0.117-28.256,0.117-37.955s-0.021-15.487-0.059-17.365 l-0.059-2.816h19.3v8.448h-0.117c0.781-1.252,1.584-2.348,2.405-3.285c0.821-0.939,1.926-1.956,3.314-3.051 c1.388-1.095,3.089-1.945,5.104-2.552c2.014-0.606,4.253-0.909,6.717-0.909c6.688,0,12.064,2.22,16.133,6.659 C88.073,41.675,90.107,48.177,90.107,56.741z"></path> </svg></a>
                                </li>
                                <li>
                                    <a href="http://www.facebook.com/genesys" target="_blank"><svg class="g-icon Social_Facebook" data-url="Social_Facebook" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M67.776,0.916v14.233h-8.465c-3.092,0-5.176,0.647-6.255,1.941c-1.078,1.294-1.617,3.235-1.617,5.823v10.189h15.798 l-2.104,15.959H51.439v40.922H34.941V49.062H21.193V33.104h13.748V21.351c0-6.686,1.869-11.87,5.607-15.555 c3.738-3.684,8.716-5.526,14.935-5.526C60.767,0.269,64.864,0.485,67.776,0.916z"></path> </svg></a>
                                </li>
                                <li>
                                    <a href="http://www.instagram.com/genesyscx" target="_blank"><svg class="g-icon Social_Instagram" data-url="Social_Instagram" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M90,45c0,8.9-0.1,15.1-0.3,18.6c-0.4,8.1-2.8,14.4-7.3,18.9c-4.5,4.5-10.7,6.9-18.9,7.3C60.1,89.9,53.9,90,45,90 c-8.9,0-15.1-0.1-18.6-0.3c-8.1-0.4-14.4-2.8-18.9-7.3C3.1,78,0.7,71.7,0.3,63.6C0.1,60.1,0,53.9,0,45c0-8.9,0.1-15.1,0.3-18.6 C0.7,18.3,3.1,12,7.6,7.6s10.7-6.9,18.9-7.3C29.9,0.1,36.1,0,45,0c8.9,0,15.1,0.1,18.6,0.3C71.7,0.7,78,3.1,82.4,7.6 c4.5,4.5,6.9,10.7,7.3,18.9C89.9,29.9,90,36.1,90,45z M49.5,8.1c-2.7,0-4.2,0-4.5,0c-0.3,0-1.8,0-4.5,0c-2.7,0-4.8,0-6.2,0 c-1.4,0-3.3,0.1-5.7,0.2c-2.4,0.1-4.4,0.3-6,0.6c-1.7,0.3-3.1,0.7-4.2,1.1c-2,0.8-3.7,1.9-5.2,3.4s-2.6,3.2-3.4,5.2 c-0.4,1.1-0.8,2.5-1.1,4.2c-0.3,1.7-0.5,3.7-0.6,6c-0.1,2.4-0.2,4.2-0.2,5.7c0,1.4,0,3.5,0,6.2c0,2.7,0,4.2,0,4.5c0,0.3,0,1.8,0,4.5 c0,2.7,0,4.8,0,6.2c0,1.4,0.1,3.3,0.2,5.7c0.1,2.4,0.3,4.4,0.6,6c0.3,1.7,0.7,3.1,1.1,4.2c0.8,2,1.9,3.7,3.4,5.2 c1.5,1.5,3.2,2.6,5.2,3.4c1.1,0.4,2.5,0.8,4.2,1.1c1.7,0.3,3.7,0.5,6,0.6c2.4,0.1,4.2,0.2,5.7,0.2s3.5,0,6.2,0c2.7,0,4.2,0,4.5,0 c0.3,0,1.8,0,4.5,0s4.8,0,6.2,0s3.3-0.1,5.7-0.2c2.4-0.1,4.4-0.3,6-0.6c1.7-0.3,3.1-0.7,4.2-1.1c2-0.8,3.7-1.9,5.2-3.4 c1.5-1.5,2.6-3.2,3.4-5.2c0.4-1.1,0.8-2.5,1.1-4.2c0.3-1.7,0.5-3.7,0.6-6c0.1-2.4,0.2-4.2,0.2-5.7c0-1.4,0-3.5,0-6.2 c0-2.7,0-4.2,0-4.5c0-0.3,0-1.8,0-4.5c0-2.7,0-4.8,0-6.2c0-1.4-0.1-3.3-0.2-5.7c-0.1-2.4-0.3-4.4-0.6-6c-0.3-1.7-0.7-3.1-1.1-4.2 c-0.8-2-1.9-3.7-3.4-5.2s-3.2-2.6-5.2-3.4c-1.1-0.4-2.5-0.8-4.2-1.1c-1.7-0.3-3.7-0.5-6-0.6c-2.4-0.1-4.2-0.2-5.7-0.2 C54.3,8,52.2,8,49.5,8.1z M61.3,28.7c4.5,4.5,6.7,9.9,6.7,16.3s-2.2,11.9-6.7,16.3c-4.5,4.5-9.9,6.7-16.3,6.7 c-6.4,0-11.9-2.2-16.3-6.7c-4.5-4.5-6.7-9.9-6.7-16.3s2.2-11.9,6.7-16.3c4.5-4.5,9.9-6.7,16.3-6.7C51.4,21.9,56.9,24.2,61.3,28.7z M55.6,55.6C58.5,52.7,60,49.1,60,45s-1.5-7.7-4.4-10.6C52.7,31.5,49.1,30,45,30c-4.1,0-7.7,1.5-10.6,4.4S30,40.9,30,45 s1.5,7.7,4.4,10.6C37.3,58.5,40.9,60,45,60C49.1,60,52.7,58.5,55.6,55.6z M72.8,17.2c1.1,1.1,1.6,2.3,1.6,3.8s-0.5,2.8-1.6,3.8 c-1.1,1.1-2.3,1.6-3.8,1.6c-1.5,0-2.8-0.5-3.8-1.6c-1.1-1.1-1.6-2.3-1.6-3.8s0.5-2.8,1.6-3.8c1.1-1.1,2.3-1.6,3.8-1.6 C70.5,15.6,71.8,16.1,72.8,17.2z"></path> </svg></a>
                                </li>
                                <li>
                                    <a href="https://plus.google.com/110706703681494816266?rel=publisher" target="_blank"><svg class="g-icon Social_GooglePlus_2" data-url="Social_GooglePlus_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <g> <path d="M47.4,51.4l-4.2-3.3c-1.3-1.1-3-2.5-3-5c0-2.6,1.8-4.2,3.3-5.7c4.9-3.9,9.8-8,9.8-16.6c0-8.9-5.6-13.6-8.3-15.8h7.2 l7.6-4.8h-23c-6.3,0-15.4,1.5-22,7c-5,4.3-7.5,10.3-7.5,15.7c0,9.1,7,18.4,19.4,18.4c1.2,0,2.4-0.1,3.7-0.2 c-0.6,1.4-1.2,2.6-1.2,4.6c0,3.6,1.9,5.8,3.5,7.9c-5.3,0.4-15.1,0.9-22.3,5.4c-6.9,4.1-9,10-9,14.3c0,8.7,8.2,16.7,25.1,16.7 c20.1,0,30.7-11.1,30.7-22.1C57.2,59.6,52.5,55.7,47.4,51.4z M32.1,37.9c-10,0-14.6-13-14.6-20.8c0-3,0.6-6.2,2.6-8.6 c1.9-2.3,5.1-3.9,8.2-3.9C37.9,4.6,43,17.7,43,26.1c0,2.1-0.2,5.8-2.9,8.5C38.2,36.5,35,37.9,32.1,37.9z M32.2,84.9 c-12.5,0-20.5-6-20.5-14.3c0-8.3,7.5-11.1,10-12c4.9-1.6,11.2-1.9,12.2-1.9c1.2,0,1.7,0,2.7,0.1c8.9,6.3,12.7,9.5,12.7,15.4 C49.4,79.5,43.4,84.9,32.2,84.9z"></path> <polygon points="76.8,37.7 76.8,26.1 71.1,26.1 71.1,37.7 59.4,37.7 59.4,43.6 71.1,43.6 71.1,55.3 76.8,55.3 76.8,43.6 88.6,43.6 88.6,37.7 "></polygon> </g> </svg></a>
                                </li>
                                <li>
                                    <a href="http://www.youtube.com/Genesys" target="_blank"><svg class="g-icon Social_YouTube" data-url="Social_YouTube" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M82.274,64.04c0,7.818-0.435,13.665-1.303,17.541c-0.469,1.971-1.438,3.625-2.907,4.962 c-1.471,1.336-3.175,2.104-5.111,2.305C66.804,89.55,57.532,89.9,45.137,89.9c-12.396,0-21.668-0.351-27.815-1.053 c-1.938-0.2-3.65-0.969-5.137-2.305c-1.487-1.337-2.448-2.991-2.882-4.962C8.434,77.839,8,71.992,8,64.04 c0-7.818,0.434-13.665,1.303-17.541c0.467-1.972,1.436-3.625,2.907-4.962c1.47-1.336,3.19-2.121,5.162-2.355 c6.114-0.668,15.369-1.002,27.765-1.002c12.396,0,21.667,0.334,27.815,1.002c1.937,0.234,3.649,1.02,5.137,2.355 c1.486,1.337,2.447,2.99,2.882,4.962C81.839,50.241,82.274,56.089,82.274,64.04z M23.837,51.561h5.362V46.85H13.563v4.711h5.263 v28.517h5.012V51.561z M32.257,0.09h5.112l-6.064,19.997v13.582h-5.012V20.087c-0.468-2.473-1.487-6.014-3.057-10.625 c-1.236-3.44-2.323-6.565-3.258-9.372h5.312l3.559,13.181L32.257,0.09z M38.271,80.077h4.46V55.319h-4.46v18.944 c-1.002,1.403-1.955,2.105-2.856,2.105c-0.602,0-0.953-0.352-1.053-1.053c-0.034-0.101-0.05-0.685-0.05-1.754V55.319h-4.46v19.596 c0,1.638,0.133,2.856,0.401,3.659c0.401,1.235,1.37,1.854,2.907,1.854c1.604,0,3.308-1.02,5.112-3.057V80.077z M50.8,16.779v8.771 c0,2.706-0.468,4.678-1.403,5.914c-1.236,1.704-3.007,2.556-5.312,2.556c-2.239,0-3.993-0.852-5.262-2.556 c-0.936-1.27-1.403-3.24-1.403-5.914v-8.771c0-2.673,0.468-4.627,1.403-5.864c1.27-1.703,3.023-2.556,5.262-2.556 c2.306,0,4.076,0.853,5.312,2.556C50.332,12.152,50.8,14.106,50.8,16.779z M46.24,26.401V15.877c0-2.306-0.719-3.458-2.155-3.458 c-1.437,0-2.155,1.152-2.155,3.458v10.524c0,2.34,0.718,3.509,2.155,3.509C45.521,29.91,46.24,28.741,46.24,26.401z M59.771,72.66 v-9.873c0-2.438-0.15-4.093-0.451-4.962c-0.568-1.871-1.753-2.807-3.558-2.807c-1.671,0-3.225,0.902-4.661,2.706V46.85h-4.46v33.228 h4.46v-2.405c1.503,1.837,3.057,2.756,4.661,2.756c1.805,0,2.99-0.919,3.558-2.756C59.62,76.77,59.771,75.1,59.771,72.66z M55.311,62.437v10.574c0,2.239-0.652,3.358-1.955,3.358c-0.769,0-1.521-0.368-2.255-1.104V60.181 c0.734-0.734,1.486-1.103,2.255-1.103C54.659,59.078,55.311,60.198,55.311,62.437z M67.589,8.66v25.009h-4.561v-2.757 c-1.771,2.072-3.491,3.107-5.162,3.107c-1.537,0-2.523-0.618-2.957-1.854c-0.268-0.802-0.401-2.055-0.401-3.759V8.66h4.561v18.394 c0,1.103,0.017,1.688,0.05,1.754c0.101,0.735,0.451,1.103,1.053,1.103c0.902,0,1.854-0.719,2.856-2.155V8.66H67.589z M76.711,72.159 v-0.652H72.15c0,1.704-0.033,2.724-0.1,3.058c-0.234,1.203-0.902,1.805-2.005,1.805c-1.537,0-2.306-1.153-2.306-3.459v-4.359h8.972 v-5.162c0-2.64-0.451-4.577-1.354-5.814c-1.303-1.703-3.074-2.556-5.312-2.556c-2.272,0-4.06,0.853-5.362,2.556 c-0.937,1.237-1.403,3.175-1.403,5.814v8.67c0,2.64,0.483,4.578,1.453,5.813c1.303,1.704,3.107,2.556,5.413,2.556 c2.405,0,4.21-0.885,5.412-2.656c0.602-0.901,0.952-1.804,1.053-2.706C76.677,74.765,76.711,73.796,76.711,72.159z M72.25,62.486 v2.306H67.74v-2.306c0-2.271,0.752-3.408,2.256-3.408C71.498,59.078,72.25,60.215,72.25,62.486z"></path> </svg></a>
                                </li>
                                <li>
                                    <a href="http://blog.genesys.com/" target="_blank"><svg class="g-icon Social_WordPress" data-url="Social_WordPress" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M27.619,3.565c5.547-2.372,11.362-3.559,17.444-3.559s11.897,1.187,17.445,3.559c5.547,2.374,10.326,5.564,14.336,9.575 c4.011,4.01,7.201,8.79,9.574,14.336c2.373,5.548,3.56,11.363,3.56,17.444c0,6.083-1.187,11.898-3.56,17.445 c-2.373,5.548-5.563,10.326-9.574,14.336c-4.01,4.01-8.789,7.201-14.336,9.574c-5.548,2.373-11.363,3.559-17.445,3.559 s-11.897-1.187-17.444-3.559c-5.548-2.373-10.326-5.564-14.336-9.574c-4.011-4.01-7.202-8.789-9.575-14.336 C1.335,56.818,0.149,51.003,0.149,44.92c0-6.082,1.186-11.896,3.559-17.444c2.373-5.547,5.564-10.326,9.575-14.336 C17.293,9.129,22.071,5.938,27.619,3.565z M28.446,84.371c5.297,2.272,10.836,3.409,16.617,3.409s11.32-1.136,16.618-3.409 c5.296-2.273,9.857-5.322,13.685-9.148c3.826-3.826,6.875-8.388,9.148-13.685c2.272-5.296,3.408-10.835,3.408-16.618 c0-5.781-1.136-11.32-3.408-16.617c-2.273-5.296-5.322-9.858-9.148-13.685c-3.827-3.826-8.389-6.875-13.685-9.148 c-5.298-2.272-10.837-3.409-16.618-3.409S33.743,3.198,28.446,5.47c-5.297,2.273-9.858,5.322-13.685,9.148 c-3.827,3.827-6.876,8.389-9.148,13.685C3.341,33.6,2.205,39.14,2.205,44.92c0,5.782,1.136,11.321,3.408,16.618 c2.272,5.297,5.321,9.859,9.148,13.685C18.588,79.049,23.149,82.098,28.446,84.371z M6.516,44.92c0-5.446,1.119-10.677,3.358-15.69 l18.397,50.378c-6.551-3.174-11.814-7.87-15.791-14.086C8.504,59.307,6.516,52.44,6.516,44.92z M71.08,42.966 c0,0.635-0.042,1.278-0.125,1.93c-0.084,0.652-0.251,1.479-0.501,2.481c-0.251,1.002-0.443,1.738-0.577,2.206 c-0.134,0.468-0.426,1.454-0.877,2.958s-0.744,2.474-0.877,2.907l-3.81,12.833L50.378,26.875c1.536-0.1,3.007-0.233,4.411-0.401 c0.634-0.066,1.068-0.376,1.303-0.927c0.233-0.552,0.192-1.069-0.125-1.554c-0.318-0.484-0.794-0.709-1.429-0.677l-10.276,0.501 c-2.506-0.033-5.882-0.201-10.126-0.501c-0.4-0.033-0.744,0.05-1.027,0.25c-0.284,0.201-0.477,0.451-0.576,0.752 c-0.101,0.301-0.126,0.61-0.075,0.928c0.05,0.318,0.2,0.594,0.451,0.827c0.25,0.234,0.576,0.368,0.978,0.401l4.01,0.401 l6.016,16.442l-8.422,25.265L21.454,26.875c1.536-0.1,3.007-0.233,4.411-0.401c0.634-0.066,1.069-0.376,1.303-0.927 c0.233-0.552,0.192-1.069-0.125-1.554c-0.318-0.484-0.794-0.709-1.429-0.677l-10.276,0.501c-0.234,0-0.618-0.008-1.152-0.025 c-0.535-0.016-0.97-0.025-1.304-0.025c3.509-5.346,8.096-9.582,13.76-12.708c5.665-3.124,11.806-4.687,18.422-4.687 c4.913,0,9.6,0.886,14.062,2.657c4.461,1.771,8.446,4.261,11.955,7.469h-0.501c-1.838,0-3.376,0.677-4.612,2.03 s-1.854,2.95-1.854,4.787c0,0.401,0.033,0.802,0.101,1.203c0.066,0.401,0.133,0.761,0.2,1.078c0.066,0.318,0.201,0.702,0.401,1.153 c0.2,0.451,0.351,0.802,0.451,1.052c0.101,0.251,0.301,0.627,0.602,1.128c0.301,0.501,0.509,0.853,0.626,1.053 c0.117,0.201,0.359,0.602,0.728,1.203c0.367,0.602,0.602,0.986,0.701,1.153C70.027,35.915,71.08,39.457,71.08,42.966z M45.716,48.279l11.88,32.433c0.033,0.201,0.117,0.384,0.251,0.551c-4.211,1.47-8.472,2.206-12.783,2.206 c-3.742,0-7.368-0.535-10.877-1.604L45.716,48.279z M78.851,26.423c3.174,5.815,4.762,11.98,4.762,18.497 c0,6.985-1.738,13.427-5.213,19.325c-3.477,5.898-8.139,10.552-13.986,13.96l11.78-33.987c1.972-5.647,2.958-10.259,2.958-13.835 C79.151,28.98,79.051,27.66,78.851,26.423z"></path> </svg></a>
                                </li>
                                <li>
                                    <a href="http://www.slideshare.net/Genesys/" target="_blank"><svg class="g-icon Social_SlideShare" data-url="Social_SlideShare" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 90 90" style="enable-background:new 0 0 90 90;"> <path d="M87.831,45.777c-4.016,4.944-10.188,9.125-18.516,12.542c2.787,9.457,2.405,17.172-1.145,23.145 c-2.19,3.749-5.227,6.204-9.108,7.366c-3.451,1.062-6.471,0.812-9.059-0.747c-2.854-1.691-4.215-4.413-4.081-8.162l-0.05-16.226 v-0.05c-0.267-0.066-0.672-0.166-1.22-0.299s-0.938-0.216-1.17-0.249l-0.05,16.823c0.133,3.782-1.244,6.503-4.131,8.162 c-2.622,1.56-5.658,1.809-9.108,0.747c-3.882-1.194-6.902-3.684-9.059-7.466c-3.484-5.973-3.85-13.654-1.095-23.045 C11.712,54.902,5.54,50.722,1.525,45.777c-0.83-1.228-0.896-2.272-0.199-3.136c0.697-0.863,1.692-0.847,2.986,0.05 c0.1,0.066,0.281,0.183,0.548,0.348c0.265,0.167,0.448,0.299,0.547,0.398V8.895c0-2.389,0.779-4.43,2.34-6.122 c1.56-1.692,3.45-2.538,5.674-2.538h62.564c2.223,0,4.113,0.846,5.674,2.538c1.56,1.692,2.339,3.733,2.339,6.122v34.542l1.046-0.746 c1.294-0.896,2.289-0.913,2.986-0.05C88.727,43.505,88.66,44.55,87.831,45.777z M79.718,46.025V12.827 c0-2.887-0.531-4.936-1.593-6.147c-1.062-1.211-2.903-1.817-5.524-1.817H17.254c-2.755,0-4.621,0.565-5.6,1.692 c-0.979,1.128-1.469,3.219-1.469,6.271v33.497c1.427,0.764,2.895,1.427,4.405,1.991c1.51,0.564,2.854,1.028,4.031,1.394 s2.521,0.672,4.032,0.921c1.509,0.249,2.688,0.432,3.533,0.547c0.847,0.117,2.008,0.184,3.484,0.199 c1.476,0.018,2.446,0.025,2.911,0.025s1.401-0.033,2.812-0.1c1.41-0.066,2.148-0.1,2.215-0.1c2.256-0.033,3.833,0.415,4.729,1.344 c0.199,0.199,0.364,0.349,0.498,0.448c0.862,0.829,1.874,1.676,3.036,2.538c0.231-3.019,2.189-4.462,5.873-4.33 c0.165,0,0.771,0.024,1.816,0.074s1.759,0.084,2.141,0.1c0.381,0.018,1.136,0.034,2.265,0.05c1.127,0.018,2.007,0,2.638-0.05 c0.63-0.05,1.534-0.124,2.713-0.224c1.177-0.1,2.189-0.24,3.035-0.423c0.847-0.183,1.875-0.406,3.086-0.672s2.322-0.589,3.335-0.971 c1.012-0.381,2.132-0.829,3.359-1.344S78.556,46.656,79.718,46.025z M43.533,37.066c0,2.755-1.054,5.119-3.16,7.093 c-2.107,1.975-4.638,2.962-7.591,2.962s-5.483-0.987-7.59-2.962c-2.107-1.974-3.161-4.338-3.161-7.093 c0-2.787,1.054-5.159,3.161-7.117c2.106-1.957,4.637-2.937,7.59-2.937s5.483,0.979,7.591,2.937 C42.479,31.907,43.533,34.279,43.533,37.066z M68.52,37.066c0,2.755-1.046,5.119-3.136,7.093c-2.091,1.975-4.629,2.962-7.615,2.962 c-2.954,0-5.483-0.987-7.591-2.962c-2.107-1.974-3.16-4.338-3.16-7.093c0-2.787,1.053-5.159,3.16-7.117 c2.107-1.957,4.637-2.937,7.591-2.937c2.986,0,5.524,0.979,7.615,2.937C67.474,31.907,68.52,34.279,68.52,37.066z"></path> </svg></a>
                                </li>
                            </ul>
                        
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <script type='text/javascript' src='{!URLFOR($Resource.app)}'/>
        <apex:includeScript value="{!URLFOR($Resource.pureportalpackage, 'assets/js/js.cookie.2.2.0.js')}"/>
       
                
        <script>
        var jQuery = $.noConflict();
        
        // User Home Page Sortable Cards
        
        ;(function ( $ ) {
        
            $.sortableCards = function( options ) {
                
                // Default settings, overriden by options
                var settings = $.extend({
                    debug: true,
                    maxCount: 3,
                    method: 'GET',
                    dataType: 'json',
                    crossDomain: true,
                    withCredentials: false,
                    cookieName: 'sortableCards',
                    mainContainer: '#main-container',
                    portal: null,
                    dashboardLists: [
                        'cards-01',
                        'cards-02',
                        'cards-inactive',
                        'dashboard-menu-01'
                    ],
                    dashboardActiveCardsLists: [
                        'cards-01',
                        'cards-02',
                    ],
                    feeds: {
                        blog: {
                            url: 'http://blog.genesys.com/wp-json/wp/v2/posts',
                            data: { _embed: true, per_page: 3 }
                        },
                        'resource-center': {
                            url: 'https://help.mypurecloud.com/wp-json/wp/v2/articles',
                            data: { _embed: true, per_page: 3, 'filter[categories]': 'popular' }
                    },
                    'developer-center': {
                        //url: 'https://developer.mypurecloud.com/forum/c/platform-api.json',
                        url: 'https://d1.pureportal.genesys.oic.g35.e23.us/f/getDeveloperCenterFeed.php',
                        data: { }
                        }
                        
                    }
                }, options );
                            
                getCurrentPortal( settings );
                            
                showMenuInstructions();
                
                handleCard( $( '#card-blog' ), settings );                
                handleCard( $( '#card-release-notes' ), settings );
                handleCard( $( '#card-resource-center' ), settings);
                handleCard( $( '#card-pureengage-docs' ), settings );
                handleCard( $( '#card-developer-center' ), settings );

                initSortableCards( settings );
    
                /**
                 * Initalizes sortable lists
                 */
                $( '#dashboard-menu-01, #cards-01, #cards-02' ).sortable({
                    connectWith: '.sortables',
                    placeholder: 'ui-state-highlight',
                    cancel: '.not-sortable',
                    start: function( event, ui ) {
                        
                        console.log( 'sortable start: '+$( ui.item ).attr('id')+', '+$( ui.item ).data('type')+', '+$( ui.item ).data('name')+', '+$( ui.item ).data('title') );
                        
                        if ( 0 && settings.debug ) {
                            console.log( 'event' );
                            console.log( event );
                            console.log( 'ui' );
                            console.log( ui );
                        }
                    
                        $( ui.item ).addClass('dragstart');
                        $( '#main-container' ).find( '.dashboard-menu-cell' ).addClass('dragstart');
                        $( '#main-container' ).find( '.cards' ).addClass('dragstart');
                    },
                    stop: function( event, ui ) {
                        
                        console.log( 'sortable stop: '+$( ui.item ).attr('id')+', '+$( ui.item ).data('type')+', '+$( ui.item ).data('name')+', '+$( ui.item ).data('title') );
                        
                        if ( 0 && settings.debug ) {
                            console.log( 'event' );
                            console.log( event );
                            console.log( 'ui' );
                            console.log( ui );
                        }
                    
                        $( ui.item ).removeClass('dragstart');
                        $( '#main-container' ).find( '.dashboard-menu-cell' ).removeClass('dragstart');
                        $( '#main-container' ).find( '.cards' ).removeClass('dragstart');
                    
                        if ( $( ui.item ).data('type') == 'item' ) {
                        
                            if ( $( ui.item ).parent().hasClass( 'cards' ) ) {
                                
                                // An item is being moved from menu to dashboard
                            
                                var menuItem = $( ui.item );
                                
                                var thisCard = $( '#cards-inactive' ).find( '#card-'+menuItem.data('name') );
    
                                if ( thisCard.length ) {
                                    menuItem.replaceWith( thisCard );
                        
                                    handleCard(thisCard, settings);
                                } else {
                                    var thisCardClone = $( '#card-placeholder' ).clone();
                
                                    thisCardClone.find( '.title' ).html(menuItem.data('title'));
                
                                    if ( menuItem.data('tag').length) {
                                        thisCardClone.find( '.title' ).append(' <span class="tag">('+menuItem.data('tag')+')</span>');
                                    }
                
                                    thisCardClone.attr('id','thisCardClone-'+menuItem.data('name'));
                                    thisCardClone.switchClass('placeholder', menuItem.data('name'));
                                    thisCardClone.attr('data-name',menuItem.data('name'));
                                    thisCardClone.attr('data-title',menuItem.data('title'));
                                    thisCardClone.attr('data-tag',menuItem.data('tag'));
                                    
                                    menuItem.replaceWith( thisCardClone );
                                }
                            }
                        
                        } else if ( $( ui.item ).data('type') == 'card' ) {
                        
                            if ( $( ui.item ).parent().hasClass( 'dashboard-menu' ) ) {
                                
                                // A card is being moved from dashboard to menu
                            
                                var thisCard = $( ui.item );
                                
                                var menuItem = transformCardToMenuItem( thisCard, settings );
                            
                                var thisCardClone = thisCard.clone();
                            
                                $( '#cards-inactive' ).append(thisCardClone);
                            
                                thisCard.replaceWith( menuItem );
                            }
                        }
                        
                        updateSortableCardsCookie( settings );
                        
                        showMenuInstructions(); 
                    }
                    
                }).disableSelection();
                
                /**
                 * Function: transformCardToMenuItem
                 * Replaces card with menu item
                 *
                 * @param card {Object}
                 * @param settings {Array}
                 */
                function transformCardToMenuItem( card, settings ) {
                    
                    var menuItem = $( '#dashboard-movable-item-placeholder' ).clone();
                
                    menuItem.find( '.title' ).html(card.data('title'));
                
                    menuItem.attr('id','dashboard-movable-item-'+card.data('name'));
                    menuItem.attr('data-portal',card.data('portal'));
                    menuItem.attr('data-name',card.data('name'));
                    menuItem.attr('data-load',card.data('load'));
                    menuItem.attr('data-title',card.data('title'));
                    menuItem.attr('data-tag',card.data('tag'));
                    
                    return menuItem;
                }
                
                /**
                 * Function: getFeed
                 * Gets feed results using asynchrous call
                 *
                 * @param url {String}
                 * @param card {Object}
                 * @param settings {Array}
                 * @param callback {Callback}
                 */
                function getFeed( url, data, settings, callback ) {
        
                    if ( settings.debug ) {
                        console.log( "getFeed..." );
                        console.log( url );
                        console.log( data );
                        console.log( settings );
                    }
                    
                    if ( (url === null) || (url.length <= 0) ) {
                        if ( settings.debug ) {
                            console.log( "error: URL required" );
                        }
                        callback (0);
                    }
                                
                    $.ajax({
                        method: settings.method,
                        url: url,
                        async: true,
                        cache: false,
                        processData: true,
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        dataType: settings.dataType,
                        crossDomain: settings.crossDomain,
                        xhrFields: {
                            withCredentials: settings.withCredentials
                            },
                        data: data,
                        error: function(xhr, status, error) {
                            if ( settings.debug ) {
                                console.log( "getFeed error" );
                                console.log( "xhr:" );
                                console.log( xhr );
                                console.log( "status:" );
                                console.log( status );
                                console.log( "error:" );
                                console.log( error );
                            }
                            callback(0);
                        },
                        success: function(result, status, xhr) {
                            if ( settings.debug ) {
                                console.log( "getFeed success" );
                                console.log( "status:" );
                                console.log( status );
                                console.log( "xhr:" );
                                console.log( xhr );
                                console.log( "result:" );
                                console.log( result );
                            }
                            callback(result);
                        }
                    });         
                };
                
                /**
                 * Function: showMenuInstructions
                 * Conditionally shows or hides instructions in dashboard menu
                 *
                 */
                function showMenuInstructions() {
                    
                    if ( settings.debug ) {
                        console.log( "showMenuInstructions..." );
                        console.log( "dashboard-menu items: "+$( 'ul#dashboard-menu-01 > li.item' ).length );
                    }
                        
                    if ( $( 'ul#dashboard-menu-01 > li.item' ).length <= 0 ) {
                        if ( settings.debug ) {
                            console.log( "show" );
                        }
                        $( 'ul#dashboard-menu-01 > li.instructions' ).show();
                    } else {
                        if ( settings.debug ) {
                            console.log( "hide" );
                        }
                        $( 'ul#dashboard-menu-01 > li.instructions' ).hide();
                    }
                };
                
                /**
                 * Function: handleCard
                 * Routes handling of card
                 *
                 * @param card {Object}
                 * @param settings {Array}
                 */
                function handleCard( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleCard..." );
                        console.log( card );
                    }
                    
                    if ( card.length > 0 ) {
                        if ( card.data('load') == 'async' ) {
                        
                            if ( settings.debug ) {
                                console.log( "card: async" );
                            }
                    
                            if ( card.data('name') == 'blog' ) {
                    
                                if ( settings.debug ) {
                                    console.log( "card: blog" );
                                }
                                
                                handleBlogCard( card, settings );
                            }
                            
                            if ( card.data('name') == 'resource-center' ) {
                    
                                if ( settings.debug ) {
                                    console.log( "card: resource-center" );
                                }
                            
                                handleresourceCard( card, settings );
                            }
                            
                            if ( card.data('name') == 'release-notes' ) {
                    
                                if ( settings.debug ) {
                                    console.log( "card: release-notes" );
                                }
                            
                                handleresourceCard( card, settings );
                            }
                            
                            if ( card.data('name') == 'card-pureengage-docs' ) {
                    
                                if ( settings.debug ) {
                                    console.log( "card: card-pureengage-docs" );
                                }
                            
                                handleDocsCard( card, settings );
                            }

                            if ( card.data('name') == 'developer-center' ) {
                    
                                if ( settings.debug ) {
                                    console.log( "card: developer-center" );
                                }
                            
                                handleDevlopCards( card, settings );
                            }
                        }


                        if ( card.find( '.orbit' ).length ) {
                        
                                if ( settings.debug ) {
                                    console.log( 'card has orbit element' );
                                }
                                
                                var orbitElement = card.find( '.orbit' )[0];
                                
                                if ( settings.debug ) {
                                    console.log( orbitElement.id );
                                    console.log( orbitElement );
                                }
                                
                                Foundation.reInit($( '#'+orbitElement.id ));
                                
                                if ( settings.debug ) {
                                    console.log( 'orbit reinitialize' );
                                }
                        }
                    }
                
                };
                
                /**
                 * Function: handleWordPressCard
                 * Displays temporariy progress animation in card,
                 * sets feed values,  and passes result to be parsed and displayed
                 *
                 * @param card {Object}
                 * @param settings {Array}
                 */
                function handleDevlopCards( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleWordPressCard..." );
                        console.log( card );
                    }
                    
                    card.find( '.card-section.middle' ).replaceWith( $( '#card-placeholder' ).find( '.card-section.middle' ).clone() );
                    
                    if (jQuery.type(settings.feeds[card.data('name')]) !== "undefined") {
                    
                        var feed = settings.feeds[card.data('name')];
                        
                        if ( settings.debug ) {
                            console.log( 'feed' );
                            console.log( feed );
                        }
                        
                        var url = 'http://blog.genesys.com/wp-json/wp/v2/posts';
        
                        var data = { _embed: true, per_page: 3 };
                                    
                        getFeed(feed.url, feed.data, settings, function(result) 
                        {
                            displayWordPressFeedContent( card, result, settings )
                        });
                    
                    }   
                };
                
                /**
                 * Function: displayWordPressFeedContent
                 * Parses result feed result and displays card content
                 *
                 * @param card {Object}
                 * @param result {Object}
                 * @param settings {Array}
                 */
                function displayWordPressFeedContent( card, result, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "displayWordPressFeedContent..." );
                        console.log( card );
                        console.log( 'displayWordPressFeedContent: result' );
                        console.log( result );
                    }
                
                    var html = '';
                    
                    html += '<div class="thumb-list-grid grid-x grid-padding-x">';
                    
                    for (var i in result) {
                        
                        var p = result[i];
                        
                        if ( (jQuery.type(p._embedded) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail) !== "undefined") ) {
                            //console.log( p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail );
                            var thumbnail = p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail;
                        } else {
                            var thumbnail = null;
                        }
                        html += '   <div class="medium-12 cell item post">';
                        html += '       <div class="thumb-item-grid grid-x grid-margin-x">';
                        html += '           <div class="small-4 medium-3 cell icon text-center">';
                        if ( thumbnail !== null ) {
                            html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" src="'+thumbnail.source_url+'" alt="Post"></a>';
                        } else {
                            html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" width="38" src="assets/img/icon/svg-red/documentation.svg" alt="Post"></a>';
                        }
                    html += '           </div>';
                    html += '           <div class="small-8 medium-9 cell summary">';
                    html += '               <p>'+p.title.rendered+'</p>';
                        html += '               <p><a href="'+p.link+'" class="more" target="_blank">Read more</a></p>';
                    html += '           </div>';
                    html += '       </div>';
                    html += '   </div>';
                }
                
                html += '</div>';
                
                card.find( '.card-section.middle' ).html( html );
            };
            
            /**
             * Function: handleDeveloperCenterCard
             * Displays temporariy progress animation in card,
             * sets feed values, and passes result to be parsed and displayed
             *
             * @param card {Object}
             * @param settings {Array}
             */
            function handleDeveloperCenterCard( card, settings ) {
                
                if ( settings.debug ) {
                    console.log( "handleDeveloperCenterCard..." );
                    console.log( card );
                }
                
                card.find( '.card-section.middle' ).replaceWith( $( '#card-placeholder' ).find( '.card-section.middle' ).clone() );
                
                if (jQuery.type(settings.feeds[card.data('name')]) !== "undefined") {
                
                    var feed = settings.feeds[card.data('name')];
                    
                    if ( settings.debug ) {
                        console.log( 'feed' );
                        console.log( feed );
                    }
                                
                    getFeed(feed.url, feed.data, settings, function(result) 
                    {
                        displayDeveloperCenterContent( card, result, settings )
                    });
                
                }   
            };
            
            /**
             * Function: displayDeveloperCenterContent
             * Parses result feed result and displays card content
             *
             * @param card {Object}
             * @param result {Object}
             * @param settings {Array}
             */
            function displayDeveloperCenterContent( card, result, settings ) {
                
                if ( settings.debug ) {
                    console.log( "displayDeveloperCenterContent..." );
                    console.log( card );
                    console.log( 'displayDeveloperCenterContent: result' );
                    console.log( result );
                    console.log( result.topic_list.topics );
                }
            
                var html = '';
                var baseUrl = 'https://developer.mypurecloud.com/forum/t/';
                
                if ( (jQuery.type(result.topic_list) != "undefined") && (jQuery.type(result.topic_list.topics) != "undefined") ) {
                    
                    if ( settings.debug ) {
                        console.log( 'topics validated' );
                    }
                    
                    html += '<div class="icon-list-grid grid-x grid-padding-x">';
                                
                    for (var i in result.topic_list.topics) {
                    
                        var t = result.topic_list.topics[i];
                        
                        if ( (jQuery.type(t.id) != "undefined") && (jQuery.type(t.slug) != "undefined") && (jQuery.type(t.title) != "undefined") ) {
                        
                            html += '   <div class="medium-12 cell item post">';
                            html += '       <div class="icon-item-grid grid-x grid-margin-x">';
                            html += '           <div class="small-3 medium-3 cell icon text-center">';
                            html += '               <a href="'+baseUrl+t.slug+'/'+t.id+'" class="ic" target="dev"><img class="ic" width="52", height="52" src="{!$Site.Prefix}/resource/1520348823000/pureportalpackage/assets/img/icon/svg-red/dev.svg?orgId=00D1D0000000MUS" alt="Topic"></a>';
                            html += '           </div>';
                            html += '           <div class="small-3 medium-9 cell summary">';
                            html += '               <p>'+t.title+'</p>';
                            html += '               <p><a href="'+baseUrl+t.slug+'/'+t.id+'" class="more" target="_blank">Read more</a></p>';
                            html += '           </div>';
                            html += '       </div>';
                            html += '   </div>';
                        } else {
                            if ( settings.debug ) {
                                console.log( 'topic not validated' );
                            }
                        }
                        
                        if (i >= 2) {
                            break;
                        }
                    }
                
                    html += '</div>';
                } else {
                    
                    if ( settings.debug ) {
                        console.log( 'topics not validated' );
                    }
                    
                }                               
                
                card.find( '.card-section.middle' ).html( html );
            };
                
                
                /**
                 * Function: getCurrentPortal
                 * Returns the unique name of the current portal,
                 * based data attribute value of main container HTML element
                 *
                 * @param settings {Array}
                 */
                function getCurrentPortal( settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "getCurrentPortal..." );
                    }
                    
                    var portal = null;
                    
                    if ( $( settings.mainContainer ).length && $( settings.mainContainer ).data('portal').length ) {
                        portal = $( settings.mainContainer ).data('portal');
                    } else {
                        portal = 'cloud';
                    }
                    
                    if ( settings.debug ) {
                        console.log( 'portal: '+portal );
                    }
                    
                    settings.portal = portal;
                    
                    return portal;
                }
                
                /**
                 * Function: getStateOfSortableCardLists
                 * Populates and returns a multi-dimensional array,
                 * based of currrent placement of sortable cards on dashboard
                 *
                 * @param settings {Array}
                 */
                function getStateOfSortableCardLists( settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "getStateOfSortableCardLists..." );
                    }
                    
                    var sortableCardsData = {};
                    
                    //console.log( 'settings.dashboardLists:' );
                    //console.log( settings.dashboardLists );
                                    
                    sortableCardsData[settings.portal] = {};
                    
                    for (var i in settings.dashboardLists) {
                        
                        var dashboardListId = settings.dashboardLists[i];
                        
                        if ( settings.debug ) {
                            console.log( 'dashboardListId: '+dashboardListId );
                        }
                        
                        sortableCardsData[settings.portal][dashboardListId] = [];
                        
                        if ( $( 'ul#'+dashboardListId ).length ) {
                            $( 'ul#'+dashboardListId+' > li' ).each(function( i ) {
                                //console.log( i + ' : ' + $( this ).data( 'name' ) );
                                sortableCardsData[settings.portal][dashboardListId][i] = $( this ).data( 'name' );
                            });
                        }
                    }
                    
                    if ( settings.debug ) {
                        console.log( 'sortableCardsData:' );
                        console.log( sortableCardsData );
                    }
                    
                    return sortableCardsData;
                }
                
                /**
                 * Function: initSortableCards
                 * Initializes sortable cards data, cookie and placment on dashboard
                 *
                 * @param settings {Array}
                 */
                function initSortableCards( settings ) {
                    
                    var d='{!commUser.Name}';

                    if ( settings.debug ) {
                        console.log( "initSortableCards..."+d);
                    }
                        
                    sortableCardsCookie = getSortableCardsCookie( settings );   

                    if ( validateSortableCardsCookie( sortableCardsCookie, settings ) ) {
                        
                        if ( settings.debug ) {
                            console.log( 'cookie is set and valid' );
                        }
                            
                        maintainSortableCardsPlacement( sortableCardsCookie, settings );
    
                    } else {
                                        
                        defaultSortableCardsPlacement( settings );
                        
                        updateSortableCardsCookie( settings )
                    }
                    
                };
                
                /**
                 * Function: defaultSortableCardsPlacement
                 * Arranges the cards in default placement
                 *
                 * @param settings {Array}
                 */
                function defaultSortableCardsPlacement( settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "defaultSortableCardsPlacement..." );
                    }
                    
                    // Check if one or more cards are in inactive list
                    if ( $( 'ul#cards-inactive > li.card' ).length > 0 ) {
                        
                        if ( settings.debug ) {
                            console.log( $( 'ul#cards-inactive > li.card' ).length + ' inactive cards' );
                        }
                        
                        // Get array of inactive card names
                        
                        var inactiveCards = [];
                        
                        $( 'ul#cards-inactive > li.card' ).each(function( i ) {
                        
                            inactiveCards.push($( this ).data( 'name' ));
                        });
                        
                        if ( settings.debug ) {
                            console.log( 'inactiveCards:' );
                            console.log( inactiveCards );
                        }
                        
                        if ( settings.dashboardActiveCardsLists.length) {
                            
                            // Split inactiveCards array into chunks, one for each active card list
                            
                            var chunkSize = Math.ceil(inactiveCards.length / settings.dashboardActiveCardsLists.length);
                            
                            inactiveCardLists = chunkArray(inactiveCards, chunkSize);
                            
                            if ( settings.debug ) {
                                console.log( 'inactiveCardLists:' );
                                console.log( inactiveCardLists );
                            }
                            
                            // Place cards in active cards lists
                            
                            for (var i in settings.dashboardActiveCardsLists) {
                    
                                var dashboardListId = settings.dashboardLists[i];
                                                                
                                for (var j in inactiveCardLists[i]) {
                                    
                                    if ( $( 'ul#cards-inactive' ).find( '#card-'+inactiveCardLists[i][j] ).length ) {
                                        
                                        $( '#'+dashboardListId ).append($( 'ul#cards-inactive' ).find( '#card-'+inactiveCardLists[i][j] ));
                
                                        if ( $( '#'+dashboardListId ).find( '#card-'+inactiveCardLists[i][j] ).length ) {
                    
                                            if ( settings.debug ) {
                                                console.log( 'card "'+inactiveCardLists[i][j]+'" placed in "'+dashboardListId+'"' );
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                };
                
                /**
                 * Function: maintainSortableCardsPlacement
                 * Maintains the placement of cards on dashboard,
                 * based on sortable cards data
                 *
                 * @param sortableCardsData {Object}
                 * @param settings {Array}
                 */
                function maintainSortableCardsPlacement( sortableCardsData, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "maintainSortableCardsPlacement..." );
                        console.log( sortableCardsData );
                    }
                                        
                    // Maintain state of sortable cards based on stored data
                    
                    // Check if one or more cards are in inactive list
                    // in preparation for move to active card lists
                    if ( $( 'ul#cards-inactive > li.card' ).length > 0 ) {
                                            
                        // Loop through active card lists
                        for (var i in settings.dashboardActiveCardsLists) {
                
                            var dashboardListId = settings.dashboardLists[i];
                
                            if ( settings.debug ) {
                                console.log( 'dashboardListId: '+dashboardListId );
                            }
                                        
                            // Check if array exists in data for current active card list
                            if ( Array.isArray(sortableCardsData[settings.portal][dashboardListId]) ) {
                        
                                // Loop through the data array and place each card in current active card list
                                for (var j in sortableCardsData[settings.portal][dashboardListId]) {
                            
                                    var cardName = sortableCardsData[settings.portal][dashboardListId][j];
                            
                                    if ( settings.debug ) {
                                        console.log( 'cardName: '+cardName );
                                    }
                                
                                    var $thisCard = $( '#cards-inactive' ).find( '#card-'+cardName );
                                
                                    if ( $thisCard.length ) {
                                        $( '#'+ dashboardListId ).append($thisCard);
                                    
                                        if ( $( '#'+ dashboardListId ).find( '#card-'+cardName ).length ) {
                                            
                                            reInitOrbit( $thisCard, settings );
                                            
                                            if ( settings.debug ) {
                                                console.log( 'card "'+cardName+'" placed in "'+dashboardListId+'"' );
                                            }
                                        }
                                    }
                                }
                            }
                        }
                
                    }
                
                    // Check again if  one or more cards remain in inactive list
                    // in preparation for adding items to dashboard menu
                    if ( $( 'ul#cards-inactive > li.card' ).length > 0 ) {      
                    
                        console.log( $( 'ul#cards-inactive > li.card' ).length + ' remaining inactive cards' );
                    
                        $( 'ul#cards-inactive > li.card' ).each(function( i ) {
                            
                            //console.log( i + ' : ' + $( this ).data( 'name' ) );
                        
                            var $thisMenuItemClone = transformCardToMenuItem( $( this ), settings );
                        
                            $( '#dashboard-menu-01' ).append($thisMenuItemClone);
                        
                            if ( $( '#dashboard-menu-01' ).find( '#dashboard-movable-item-'+cardName ).length ) {
                            
                                if ( settings.debug ) {
                                    console.log( 'item "'+cardName+'" placed in dashboard menu' );
                                }
                            }
                        });
                    
                        showMenuInstructions();
                    }       
                };
                
                /**
                 * Function: reInitOrbit
                 * Checks for and reinitializes display of orbit carousel
                 *
                 * @param card {Object}
                 * @param settings {Array}
                 */
                function reInitOrbit( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "reInitOrbit..." );
                        console.log( card );
                    }
                    
                    if ( card.find( '.orbit' ).length ) {
                        
                        if ( settings.debug ) {
                            console.log( 'card has orbit element' );
                        }
                        
                        var orbitElement = card.find( '.orbit' )[0];
                        
                        if ( settings.debug ) {
                            console.log( orbitElement.id );
                            console.log( orbitElement );
                        }
                        
                        Foundation.reInit($( '#'+orbitElement.id ));
                        
                        if ( settings.debug ) {
                            console.log( 'orbit reinitialize' );
                        }
                    }
                    
                };

                /**
                 * Function: validateSortableCardsCookie
                 * Returns cookie value
                 *
                 * @param settings {Array}
                 */
                function validateSortableCardsCookie( cookie, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "validateSortableCardsCookie..." );
                    }
                    
                    var valid = true;
                    
                    if ( jQuery.type(cookie) == "undefined" ) {
                        
                        if ( settings.debug ) {
                            console.log( 'cookie is undefined' );
                        }
                        
                        valid = false;
                    } else {
                    
                        if ( settings.debug ) {
                            console.log( 'cookie is '+jQuery.type(cookie) );
                            console.log( 'cookie.cloud is '+jQuery.type(cookie.cloud) );
                            console.log( 'cookie.connect is '+jQuery.type(cookie.connect) );
                            console.log( 'cookie.engage is '+jQuery.type(cookie.engage) );
                            console.log( cookie );
                            console.log( 'current portal: '+settings.portal );
                        }
                        
                        if ( (jQuery.type(cookie[settings.portal]) == "undefined") ) {
                        
                            if ( settings.debug ) {
                                console.log( 'cookie.'+settings.portal+' undefined' );
                            }
                        
                            valid = false;
                        }
                    }
                    
                    if ( settings.debug ) {
                        if ( valid ) {
                            console.log( 'cookie is valid' );
                        } else {
                            console.log( 'cookie is not valid' );
                        }
                    }
                    
                    return valid;
                }
                
                /**
                 * Function: getSortableCardsCookie
                 * Returns cookie value
                 *
                 * @param settings {Array}
                 */
                function getSortableCardsCookie( settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "getSortableCardsCookie..." );
                    }
                    
                    var cookie = Cookies.getJSON(settings.cookieName);  
                    
                    if ( settings.debug ) {
                        console.log( 'sortableCards cookie:' );
                        console.log( cookie );
                    }
                                    
                    return cookie;
                }
                
                /**
                 * Function:setSortableCardsCookie
                 * Returns cookie value
                 *
                 * @param data {Object}
                 * @param settings {Array}
                 */
                function setSortableCardsCookie( data, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "setSortableCardsCookie..." );
                        console.log( data );
                    }
                    
                    Cookies.set(settings.cookieName, JSON.stringify(data), { expires: 365 });
                }
                
                /**
                 * Function: updateSortableCardsCookie
                 * Updates cookie value, based on current state of dashboard
                 *
                 * @param settings {Array}
                 */
                function updateSortableCardsCookie( settings ) {
                
                if ( settings.debug ) {
                    console.log( "updateSortableCardsCookie..." );
                }
    
                data = getStateOfSortableCardLists( settings );
                
                cookie = getSortableCardsCookie( settings );    
                
                if ( settings.debug ) {
                    console.log( 'current portal: '+settings.portal );
                    console.log( 'data:' );
                    console.log( data );
                    console.log( 'cookie:' );
                    console.log( cookie );
                }
                
                if ( jQuery.type(cookie) == "undefined" ) {
                    
                    if ( settings.debug ) {
                        console.log( 'cookie is undefined' );
                    }
                    
                    setSortableCardsCookie( data, settings );
                
                    if ( settings.debug ) {
                        console.log( 'cookie set' );
                    }
                    
                } else {
                
                    if ( settings.debug ) {
                        console.log( 'cookie is '+jQuery.type(cookie) );
                    }
                    
                    cookie[settings.portal] = data[settings.portal];
                    
                    if ( settings.debug ) {
                        console.log( 'cookie object updated with data for current portal' );
                        console.log( 'cookie:' );
                        console.log( cookie );
                    }
                    
                    setSortableCardsCookie( cookie, settings );
                
                    if ( settings.debug ) {
                        console.log( 'cookie set' );
                    }
                }
                
                cookie = getSortableCardsCookie( settings );    
                };
                /**
                 * Function: chunkArray
                 * Returns an array with arrays of the given size.
                 *
                 * @param myArray {Array} array to split
                 * @param chunk_size {Integer} Size of every group
                 */
                function chunkArray(myArray, chunk_size){
                    var index = 0;
                    var arrayLength = myArray.length;
                    var tempArray = [];
        
                    for (index = 0; index < arrayLength; index += chunk_size) {
                        myChunk = myArray.slice(index, index+chunk_size);
                        // Do something if you want with the group
                        tempArray.push(myChunk);
                    }
    
                    return tempArray;
                }
                
                 function handleDevlopCards( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleBlogCard..." );
                        console.log( card );
                    }
                    
                    card.find( '.card-section.middle' ).replaceWith( $( '#cards-placeholders' ).find( '.card-section.middle' ).clone() );
                    
                    var url = 'https://developer.genesys.com/wp-json/wp/v2/posts';
                    //var url = 'https://developer.genesys.com/wp-json/wp/v2/posts';
                   
                    var data = { _embed: true, per_page: 3 };
                                    
                    getFeed(url, data, settings, function(result) 
                    {
                        displayDevFoundryCardContent( card, result, settings )
                    });         
                };

                function handleDocsCard( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleBlogCard..." );
                        console.log( card );
                    }
                    
                    card.find( '.card-section.middle' ).replaceWith( $( '#cards-placeholders' ).find( '.card-section.middle' ).clone() );
                    
                    //var url = 'https://help.mypurecloud.com/wp-json/wp/v2/articles';
                    var url = 'https://docs.genesys.com/index.php?title=Special:CargoExport&tables=Cargo_Popular&&fields=Target%2CTitle&&order+by=%60Target%60&limit=100&format=json';
                   
                    var data = { _embed: true, per_page: 3 };
                                    
                    getFeed(url, data, settings, function(result) 
                    {
                        displayDocsCardContent( card, result, settings )
                    });         
                };
                
                function handleBlogCard( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleBlogCard..." );
                        console.log( card );
                    }
                    
                    card.find( '.card-section.middle' ).replaceWith( $( '#cards-placeholders' ).find( '.card-section.middle' ).clone() );
                    
                    //var url = 'https://help.mypurecloud.com/wp-json/wp/v2/articles';
                    var url = 'https://docs.genesys.com/index.php?title=Special:CargoExport&tables=Cargo_Popular&&fields=Target%2CTitle&&order+by=%60Target%60&limit=100&format=json';
                   
                    var data = { _embed: true, per_page: 3 };
                                    
                    getFeed(url, data, settings, function(result) 
                    {
                        displayBlogCardContent( card, result, settings )
                    });         
                };
                
                function handleresourceCard( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleBlogCard..." );
                        console.log( card );
                    }
                    
                    card.find( '.card-section.middle' ).replaceWith( $( '#cards-placeholders' ).find( '.card-section.middle' ).clone() );
                    
                    var url = 'https://training.mypurecloud.com/wp-json/wp/v2/courses?filter[course-category]=popular';
                   
                    var data = { _embed: true, per_page: 3 };
                                    
                    getFeed(url, data, settings, function(result) 
                    {
                        displayBlogCardContent( card, result, settings )
                    });         
                };
                
                function handleresourceNotes( card, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "handleBlogCard..." );
                        console.log( card );
                    }
                    
                    card.find( '.card-section.middle' ).replaceWith( $( '#cards-placeholders' ).find( '.card-section.middle' ).clone() );
                    
                    var url = 'https://help.mypurecloud.com/wp-json/wp/v2/releasenotes';
                   
                    var data = { _embed: true, per_page: 3 };
                                    
                    getFeed(url, data, settings, function(result) 
                    {
                        displayBlogCardContent( card, result, settings )
                    });         
                };
                
                function displayBlogCardContent( card, result, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "displayBlogCardContent..." );
                        console.log( card );
                        console.log( 'displayBlogCardContent: result' );
                        console.log( result );
                    }
                
                    var html = '';
                    
                    html += '<div class="thumb-list-grid grid-x grid-padding-x">';
                    
                    for (var i in result) {
                        
                        var p = result[i];
                        
                        if ( (jQuery.type(p._embedded) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail) !== "undefined") ) {
                            var thumbnail = p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail;
                        } else {
                            var thumbnail = null;
                        }
                        html += '   <div class="medium-12 cell item post">';
                        html += '       <div class="thumb-item-grid grid-x grid-margin-x">';
                        html += '           <div class="small-4 medium-3 cell icon text-center">';
                        if ( thumbnail !== null ) {
                        html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" src="'+thumbnail.source_url+'" alt="Post"></a>';
                        } else {
                        html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" width="38" src="/know/resource/1520348823000/pureportalpackage/assets/img/icon/svg-red/documentation.svg?orgId=00D1D0000000MUS" alt="Post"></a>';
                        }
                        html += '           </div>';
                        html += '           <div class="small-8 medium-9 cell summary">';
                        html += '               <p>'+p.Target+'</p>';
                        html += '               <p><a href="'+p.Title+'" class="more" target="blog">Read more</a></p>';
                        html += '           </div>';
                        html += '       </div>';
                        html += '   </div>';
                    }
                    
                    html += '</div>';
                    
                    card.find( '.card-section.middle' ).html( html );
                };
                
                
                function displayDocsCardContent( card, result, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "displayBlogCardContent..." );
                        console.log( card );
                        console.log( 'displayBlogCardContent: result' );
                        console.log( result );
                    }
                
                    var html = '';
                    
                    html += '<div class="thumb-list-grid grid-x grid-padding-x">';
                    
                    for (var i in result) {
                        
                        var p = result[i];
                        
                        if ( (jQuery.type(p._embedded) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail) !== "undefined") ) {
                            //console.log( p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail );
                            var thumbnail = p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail;
                        } else {
                            var thumbnail = null;
                        }
                        html += '   <div class="medium-12 cell item post">';
                        html += '       <div class="thumb-item-grid grid-x grid-margin-x">';
                        html += '           <div class="small-4 medium-3 cell icon text-center">';
                        if ( thumbnail !== null ) {
                        html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" src="'+thumbnail.source_url+'" alt="Post"></a>';
                        } else {
                        html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" width="38" src="{!$Site.Prefix}/resource/1520445492000/pureportalpackage/assets/img/icon/svg-red/documentation.svg?orgId=00D1D0000000MUS" alt="Post"></a>';
                        }
                        html += '           </div>';
                        html += '           <div class="small-8 medium-9 cell summary">';
                        html += '               <p>'+p.Title+'</p>';
                        html += '               <p><a href="'+p.Target+'" class="more" target="blog">Read more</a></p>';
                        html += '           </div>';
                        html += '       </div>';
                        html += '   </div>';
                    }
                    
                    html += '</div>';
                    
                    card.find( '.card-section.middle' ).html( html );
                };

                function displayDevFoundryCardContent( card, result, settings ) {
                    
                    if ( settings.debug ) {
                        console.log( "displayBlogCardContent..." );
                        console.log( card );
                        console.log( 'displayBlogCardContent: result' );
                        console.log( result );
                    }
                
                    var html = '';
                    
                    html += '<div class="thumb-list-grid grid-x grid-padding-x">';
                    
                    for (var i in result) {
                        
                        var p = result[i];
                        
                        if ( (jQuery.type(p._embedded) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0]) !== "undefined") && (jQuery.type(p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail) !== "undefined") ) {
                            //console.log( p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail );
                            var thumbnail = p._embedded["wp:featuredmedia"][0].media_details.sizes.thumbnail;
                        } else {
                            var thumbnail = null;
                        }
                        html += '   <div class="medium-12 cell item post">';
                        html += '       <div class="thumb-item-grid grid-x grid-margin-x">';
                        html += '           <div class="small-4 medium-3 cell icon text-center">';
                        if ( thumbnail !== null ) {
                        html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" src="'+thumbnail.source_url+'" alt="Post"></a>';
                        } else {
                        html += '               <a href="'+p.link+'" class="ic" target="blog"><img class="ic" width="38" src="{!$Site.Prefix}/resource/1520445492000/pureportalpackage/assets/img/icon/svg-red/documentation.svg?orgId=00D1D0000000MUS" alt="Post"></a>';
                        }
                        html += '           </div>';
                        html += '           <div class="small-8 medium-9 cell summary">';
                        html += '               <p>'+p.Title+'</p>';
                        html += '               <p><a href="'+p.Target+'" class="more" target="blog">Read more</a></p>';
                        html += '           </div>';
                        html += '       </div>';
                        html += '   </div>';
                    }
                    
                    html += '</div>';
                    
                    card.find( '.card-section.middle' ).html( html );
                };
    
            };
        
        }( jQuery ));
    
        (function ( $ ) {
            $.sortableCards({});
        }( jQuery ));
        
        // Profile Edit Photo Display
        
        jQuery(document).ready(function($){
            $( 'a#profile-photo-file-anchor' ).click(function(e){
                console.log('click profile-photo-file-anchor');
                $('input#profile-photo-file').click();
                e.preventDefault();
            });
    
            $( 'input#profile-photo-file' ).change(function(){
                readURL(this);
            }); 
            
            function readURL(input) {
                if (input.files && input.files[0]) {
                    
                    //console.log('profile-photo-file input');
                    //console.log(input);
                    
                    var reader = new FileReader();
    
                    reader.onload = function (e) {
                        $( '#profile-photo-img' ).attr('src', e.target.result);
                        //console.log('FileReader onload e.target');
                        //console.log(e.target);
                        
                        $( '#profile-photo-img' ).show();
                    }
    
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }); 
        </script> 
       
</apex:component>